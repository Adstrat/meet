{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showDetails","handleShowDetails","setState","this","event","props","className","summary","start","dateTime","location","onClick","href","htmlLink","target","rel","description","Component","EventList","events","map","id","InfoAlert","color","getStyle","style","text","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","display","NumberOfEvents","numberOfEvents","handleNumberChange","mockData","kind","etag","status","created","updated","creator","email","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Set","getEvents","a","NProgress","window","startsWith","done","getAccessToken","token","removeQuery","url","axios","get","result","data","localStorage","setItem","JSON","stringify","newurl","history","pushState","pathname","protocol","host","getToken","code","encodeCode","encodeURIComponent","fetch","then","res","json","catch","error","access_token","checkToken","accessToken","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","currentLocation","eventCount","filteredEvents","slice","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","atatus","install"],"mappings":"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","file":"static/js/main.5a7bc9d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Event extends Component {\n  state = {\n    showDetails: false\n  };\n\n  handleShowDetails = () => {\n    if (this.state.showDetails === false) {\n      this.setState({ showDetails: true });\n    } else {\n      this.setState({ showDetails: false });\n    }\n  };\n\n  render() {\n    const showDetails = this.state.showDetails;\n    const { event } = this.props;\n\n    return (\n      <div className=\"event\">\n        <div className=\"overview\">\n          <h2>{event.summary}</h2>\n          <p>{event.start.dateTime}</p>\n          <p>{event.location}</p>\n          {!showDetails && (\n            <button\n              className=\"show-details\"\n              onClick={this.handleShowDetails}\n            >Show Details</button>\n          )}\n        </div>\n\n        {showDetails && (\n          <div className=\"event__Details\">\n            <h3>About this Event:</h3>\n            <a\n              href={event.htmlLink}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <button className=\"google-btn\">See details on Google Calendar</button>\n            </a>\n            <p>{event.description}</p>\n            <button\n              className=\"hide-details\"\n              onClick={this.handleShowDetails}\n            >Hide Details</button>\n          </div>\n        )}\n\n      </div>\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from \"react\";\nimport Event from \"./Event\";\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventsList\">\n        {events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from \"react\";\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = \"blue\";\n  }\n}\n\nexport { InfoAlert };","import React, { Component } from \"react\";\nimport { InfoAlert } from \"./Alert\";\n\nclass CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText: \"The city you're looking for can't be found.  Please try another city.\",\n      });\n    } else {\n      return this.setState({\n        query: value,\n        suggestions,\n        infoText: \"\"\n      });\n    }\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false,\n      infoText: \"\"\n    });\n\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <div className=\"alert-message\">\n          <InfoAlert text={this.state.infoText} />\n        </div>\n\n        <label className=\"input-message\">Select a city:</label>\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => {\n            this.setState({ showSuggestions: true })\n          }}\n        />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: \"none\" }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li\n            onClick={() => this.handleItemClicked(\"all\")}\n          >\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from \"react\";\n\nclass NumberOfEvents extends Component {\n\n  state = {\n    numberOfEvents: 32\n  }\n\n  handleNumberChange = (event) => {\n    const value = event.target.value;\n    this.setState({\n      numberOfEvents: value\n    })\n    this.props.updateEvents(null, value);\n  }\n\n  render() {\n\n    return (\n\n      <div className=\"numberOfEvents\">\n        <label className=\"input-message\">Number of Events:</label>\n        <input\n          type=\"text\"\n          className=\"input-number\"\n          value={this.state.numberOfEvents}\n          onChange={this.handleNumberChange}\n        />\n\n      </div>\n\n    );\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181161784712000\"',\n    id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    status: \"confirmed\",\n    htmlLink: \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:17:46.000Z\",\n    updated: \"2020-05-27T12:01:32.356Z\",\n    summary: \"Learn JavaScript\",\n    description: \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    location: \"London, UK\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true\n    },\n    start: {\n      dateTime: \"2020-05-19T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\"\n    },\n    end: {\n      dateTime: \"2020-05-19T17:00:00+02:00\",\n      timeZone: \"Europe/Berlin\"\n    },\n    recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\n    originalStartTime: {\n      dateTime: \"2020-05-19T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\"\n    },\n    iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true\n    },\n    eventType: \"default\"\n  },\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181159875584000\"',\n    id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    status: \"confirmed\",\n    htmlLink: \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:14:30.000Z\",\n    updated: \"2020-05-27T11:45:37.792Z\",\n    summary: \"React is Fun\",\n    description: \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    location: \"Berlin, Germany\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true\n    },\n    start: {\n      dateTime: \"2020-05-20T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\"\n    },\n    end: {\n      dateTime: \"2020-05-20T15:00:00+02:00\",\n      timeZone: \"Europe/Berlin\"\n    },\n    recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    originalStartTime: {\n      dateTime: \"2020-05-20T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\"\n    },\n    iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true\n    },\n    eventType: \"default\"\n  }\n];\n\nexport { mockData };","import { mockData } from \"./mock-data\";\nimport axios from \"axios\";\nimport NProgress from \"nprogress\";\n\nexport const extractLocations = (events) => {\n  const extractLocations = events.map((event) => event.location);\n  return [...new Set(extractLocations)];\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = `https://r1dakinba1.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\n    const result = await axios.get(url);\n    if (result.data) {\n      let locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst removeQuery = () => {\n  let newurl;\n  if (window.history.pushState && window.location.pathname) {\n    newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://r1dakinba1.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n}\n\nconst checkToken = async (accessToken) => {\n  return await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n}\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem(\"access_token\");\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://r1dakinba1.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { getEvents, extractLocations } from './api';\nimport \"./nprogress.css\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    currentLocation: \"all\"\n  }\n\n  updateEvents = (location, eventCount) => {\n    const { currentLocation, numberOfEvents } = this.state;\n    // handleItemClicked() in <CitySearch>\n    if (location) {\n      getEvents().then((events) => {\n        const locationEvents = (location === \"all\") ?\n          events :\n          events.filter((event) => event.location === location);\n        const filteredEvents = locationEvents.slice(0, numberOfEvents);\n        this.setState({\n          events: filteredEvents,\n          currentLocation: location\n        });\n      });\n      // handleNumberChange() in <NumberOfEvents>\n    } else {\n      getEvents().then((events) => {\n        const locationEvents = (currentLocation === \"all\") ?\n          events :\n          events.filter((event) => event.location === currentLocation);\n        const filteredEvents = locationEvents.slice(0, eventCount);\n        this.setState({\n          events: filteredEvents,\n          numberOfEvents: eventCount\n        });\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, this.state.numberOfEvents),\n          locations: extractLocations(events)\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h2 className=\"meet-title\">Meet App</h2>\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents}\n          numberOfEvents={this.state.numberOfEvents}\n        />\n        <NumberOfEvents\n          numberOfEvents={this.state.numberOfEvents}\n          updateEvents={this.updateEvents}\n        />\n        <EventList\n          events={this.state.events}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\natatus.config('b402e4864af94b3980806c1367f7b389').install();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}